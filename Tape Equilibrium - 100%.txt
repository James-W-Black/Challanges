//This program takes a non empty array A, splits it in two
//and finds the absolute minimal difference that can be achieved 
//between the two parts and return the lowest number.

//e.g
  //A[0] = 3
  //A[1] = 1
  //A[2] = 2
  //A[3] = 4
  //A[4] = 3
//We can split this tape in four places:

//P = 1, difference = |3 − 10| = 7
//P = 2, difference = |4 − 9| = 5
//P = 3, difference = |6 − 7| = 1
//P = 4, difference = |10 − 3| = 7

//the program would return the value 1, which is achieved by splitting the array at A[3]

    public static int tape(int[] A)
    {
       int sum1 = A[0];
       int sum2 = 0;

       int p =1;

       for(int i=p; i<A.length;i++)
       {
           sum2 += A[i];
       }

       int min = Math.abs(sum1-sum2);

       for(; p<A.length-1;p++)
       {
           sum1+=A[p];
           sum2-=A[p];

           int current = Math.abs(sum1-sum2);
           if(current<min) min = current;
       }

       return min;
    }